import { Controller as s } from "@hotwired/stimulus";
class t extends s {
  connect() {
    this.hasButtonTarget && (this.originalContent = this.buttonTarget.innerHTML);
  }
  copy(e) {
    e.preventDefault();
    const i = this.sourceTarget.innerHTML || this.sourceTarget.value;
    navigator.clipboard.writeText(i).then(() => this.copied());
  }
  copied() {
    this.hasButtonTarget && (this.timeout && clearTimeout(this.timeout), this.buttonTarget.innerText = this.data.get("successContent"), this.timeout = setTimeout(() => {
      this.buttonTarget.innerHTML = this.originalContent;
    }, this.successDurationValue));
  }
}
t.targets = ["button", "source"];
t.values = {
  successDuration: {
    type: Number,
    default: 2e3
  }
};
export {
  t as default
};
